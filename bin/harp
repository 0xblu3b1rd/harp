#!/usr/bin/env node

var nodePath    = require('path')
var program = require('commander')
var pkg     = require('../package.json')
var harp    = require('../')

program
  .version(pkg.version)

program
  .command('init [path]')
  .description('initalize new harp application in current directory')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())
    console.log('initializing project at', projectPath)
  })
program
  .command('server [path]')
  .option('-p, --port <port>', 'specify port to listen on')
  .description('start harp server')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())      
    var port        = program.port || 9966
    harp.server(projectPath, { port: port, hostmode: false }, function(){
      console.log("server is listening on port", port)
    })
  })
program
  .command('compile [path]')
  .option('-o, --output <path>', 'specify output directory for compiled assets (relative to project path)')
  .description('compile project to satic assets')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())
    var outputPath  = program.output || null
    harp.compile(projectPath, outputPath, function(errors, output){
      console.log(JSON.stringify(errors || output, null, 2))
    })
  })
  
program
  .command('multihost [path]')
  .description('start harp server to host directory of harp apps')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())
    var port        = program.port || 9966
    harp.server(projectPath, { port: port, hostmode: true }, function(){
      console.log("server is hosting multiple projects on port", port)
    })
  })

program.parse(process.argv)

if(program.args.length < 1){
  program.help()
}
